{"version":3,"file":"static/js/816.22238361.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","hooks/useFormEdit.js","screens/Dashboard/Dashboard.js"],"sourcesContent":["import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import { useState } from \"react\";\r\n\r\nconst getCurrentFieldValue = (initialVal, edits, fieldName) => {\r\n  if (edits[fieldName] !== undefined) {\r\n    return edits[fieldName];\r\n  }\r\n  if (initialVal) {\r\n    return initialVal[fieldName];\r\n  }\r\n  return null;\r\n};\r\n\r\nconst isEmpty = (obj) => {\r\n  if (typeof obj === \"object\") {\r\n    for (let prop in obj) {\r\n      if (obj.hasOwnProperty(prop)) {\r\n        return false;\r\n      }\r\n    }\r\n    return JSON.stringify(obj) === JSON.stringify({});\r\n  }\r\n  return Array.isArray(obj) && obj.length === 0;\r\n};\r\n\r\nexport const useFormEdit = (initial) => {\r\n  const [edits, setEdits] = useState({});\r\n\r\n  const reset = () => {\r\n    setEdits({});\r\n  };\r\n\r\n  const update = (values) => {\r\n    setEdits({ ...edits, ...values });\r\n  };\r\n\r\n  const allFilled = (...properties) => {\r\n    return !properties.some((e) => !getValue(e));\r\n  };\r\n\r\n  const getValue = (field) => {\r\n    return getCurrentFieldValue(initial, edits, field);\r\n  };\r\n\r\n  const isAnyModified = () => {\r\n    return !isEmpty(edits);\r\n  };\r\n\r\n  return { reset, update, getValue, allFilled, edits, isAnyModified };\r\n};\r\n","import { Box, Container } from \"@mui/material\";\r\nimport { memo, useState } from \"react\";\r\nimport { MuiButton, MuiTextInput } from \"../../components\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useFormEdit } from \"../../hooks/useFormEdit\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  const theme = useTheme();\r\n  const [isError, setIsError] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const initialValues = {\r\n    tipAmount: \"\",\r\n  };\r\n\r\n  const edit = useFormEdit(initialValues);\r\n  const RequiredFields = [\"tipAmount\"];\r\n\r\n  const onClickPay = () => {\r\n    if (RequiredFields && edit.allFilled(\"tipAmount\")) {\r\n      navigate(\"/payment\", {\r\n        state: { tipAmount: edit.getValue(\"tipAmount\") },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth={\"xs\"}>\r\n      <Box\r\n        style={{\r\n          padding: theme.spacingTheme.padding.lg,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          rowGap: 40,\r\n          height: \"100%\",\r\n          alignItems: \"center\",\r\n        }}>\r\n        <MuiTextInput\r\n          value={Number(edit.getValue(\"tipAmount\")).toLocaleString(\"en-IN\")}\r\n          onChange={(event) => {\r\n            edit.update({\r\n              tipAmount: event.target.value.replace(/[^0-9]/g, \"\"),\r\n            });\r\n          }}\r\n          error={isError && !edit.allFilled(\"tipAmount\")}\r\n          inputHeight={35}\r\n        />\r\n        <MuiButton\r\n          title=\"Pay With Card\"\r\n          sx={{\r\n            fontSize: 12,\r\n            fontWeight: 700,\r\n            borderRadius: \"8px\",\r\n            width: \"100%\",\r\n            height: \"30px\",\r\n            color: \"white\",\r\n            backgroundColor: \"orange\",\r\n          }}\r\n          onClick={onClickPay}\r\n        />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default memo(Dashboard);\r\n"],"names":["createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","Container","options","arguments","length","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","componentName","ContainerRoot","_ref","theme","_extends","width","marginLeft","boxSizing","marginRight","display","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","_ref3","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref4","Math","max","xs","React","ref","className","_props$component","component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","generateUtilityClass","useUtilityClasses","_jsx","as","clsx","createContainer","styled","useFormEdit","initial","_useState","useState","_useState2","_slicedToArray","edits","setEdits","getValue","field","initialVal","fieldName","getCurrentFieldValue","reset","update","_objectSpread","allFilled","_len","properties","Array","_key","some","e","isAnyModified","obj","prop","hasOwnProperty","JSON","stringify","isArray","isEmpty","Dashboard","useTheme","isError","navigate","useNavigate","edit","tipAmount","RequiredFields","children","_jsxs","Box","style","padding","spacingTheme","lg","flexDirection","rowGap","height","alignItems","MuiTextInput","Number","toLocaleString","onChange","event","target","replace","error","inputHeight","MuiButton","title","sx","fontSize","fontWeight","borderRadius","color","backgroundColor","onClick","state","memo"],"sourceRoot":""}